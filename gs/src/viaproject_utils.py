import json
import jinja2 as j2
import pandas as pd
from pathlib import Path

def viaproject_to_cvs(path_input: str, path_output: str) -> None:
    '''
    from a json generated by saving a VIA project (https://www.robots.ox.ac.uk/~vgg/software/via/app/via_video_annotator.html)
    generates a csv containing information on temporal segmentation having the header
    TYPE_EVENT,START_OFFSET_SECOND,END_OFFSET_SECOND

    Usefull for labeling purpose
    '''
    with open(path_input, 'r') as f:
        data = json.load(f)

    metadata = data['metadata']
    events = list(metadata.values())
    df = pd.DataFrame(
        data=[
            (event['av']['1'], event['z'][0], event['z'][1])
            for event in events
        ],
        columns=['TYPE_EVENT', 'START_OFFSET_SECOND', 'END_OFFSET_SECOND']
    )
    df.to_csv(path_output, index=False)


def csv_to_viaproject(path_input: str, path_output: str, name_video: str) -> None:
    '''
    from a csv containing information on temporal segmentation having the header:
    TYPE_EVENT,START_OFFSET_SECOND,END_OFFSET_SECOND
    generates a json file loadable as a VIA project (https://www.robots.ox.ac.uk/~vgg/software/via/app/via_video_annotator.html)

    Usefull for testing purpose.    
    '''
    path_template = Path(__file__).parent
    file_loader = j2.FileSystemLoader(path_template)
    env = j2.Environment(loader=file_loader)
    template = env.get_template('template_viaproject.j2')

    content = template.render(
        video_name=name_video,
        csv_records=pd.read_csv(path_input).to_dict('records')
    )

    with open(path_output, 'w') as f:
        f.write(content)


# csv_to_viaproject(
#     path_input='/mnt/c/Users/genna/Desktop/ganci_smart/video_ganci_25-06-2024/GOPR0698.csv',
#     path_output='/mnt/c/Users/genna/Desktop/ganci_smart/video_ganci_25-06-2024/test_.json',
#     name_video='GOPR0698.mp4'
# )